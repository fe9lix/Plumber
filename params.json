{"name":"Plumber","tagline":"","body":"Plumber\r\n==========\r\n\r\nPlumber is a tiny Objective-C library for creating curved connection lines between nodes (for example, for flowcharts and the like). I have created it since a quick Google search did not reveal anything simple for iOS. The curve calculation algorithm is a direct port of the function used in the [Graffle Example](http://raphaeljs.com/graffle.html) of the vector drawing library [RaphaÃ«l](http://raphaeljs.com/).\r\n\r\n### Installation\r\nJust drag the folder `Plumber/Plumber` with its two classes `Plumber` and `PlumberConnection` into your Xcode project.\r\n\r\n### How to use it\r\n\r\nThe API couldn't be simpler: There's just one method `connect` that takes two CGRects (usually from a UIView or CALayer) and returns a new `PlumberConnection`, which is an immutable value object holding the original CGRects and the calculated UIBezierPath.\r\n\r\n```objective-c\r\nPlumber *plumber = [Plumber new];\r\nPlumberConnection *connection = [plumber connectFrom:layerA.frame to:layerB.frame];\r\nUIBezierPath *path = connection.path;\r\n// draw the path...\r\n\r\n```\r\n\r\nSee the example app (`Plumber/Example`) on how you could implement draggable shapes with their connection lines updated.\r\n\r\n###License\r\n[The MIT License](http://opensource.org/licenses/MIT)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}